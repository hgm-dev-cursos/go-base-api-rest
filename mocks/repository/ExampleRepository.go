// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/henriquegmendes/go-base-api-rest/models"
	mock "github.com/stretchr/testify/mock"
)

// ExampleRepository is an autogenerated mock type for the ExampleRepository type
type ExampleRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, example
func (_m *ExampleRepository) Create(ctx context.Context, example *models.Example) error {
	ret := _m.Called(ctx, example)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.Example) error); ok {
		r0 = rf(ctx, example)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewExampleRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewExampleRepository creates a new instance of ExampleRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExampleRepository(t mockConstructorTestingTNewExampleRepository) *ExampleRepository {
	mock := &ExampleRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
